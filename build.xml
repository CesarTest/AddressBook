<?xml version="1.0"?>
<project name="addressBook" default="Launch" basedir=".">

	<!-- ========================================================= -->
	<!--                    GLOBAL ENVIRONMENT                     -->
	<!-- ========================================================= -->

	<!-- ================= Common to all projects ================ -->
	<!-- ... 1.- Project Folders  -->
	<property name="source"    location="src"/>
	<property name="logs"  	   location="logs"/>
	<property name="test"      location="test"/>	
	<property name="doc"       location="doc"/>

	<!-- ... 2.- PHP Folders (missing automatic detection)  -->
	<property name="nodeExec"        value="node"/>
	<property name="nodeOptions"     value="--harmony"/>
	<property name="composerExec"    value="composer"/>
	<property name="composerOptions" value="install"/>
	
	<!-- ... 3.- PHPDoc Folders (missing automatic detection)  -->
	<property name="jsDocLocalPath"  location="${lib}/.bin"/>
	<property name="jsDocLocalExec"  location="${jsDocLocalPath}/jsdoc"/>
	<property name="jsDocGlobalPath" location="/usr/local/lib/node_modules/jsdoc"/>
	<property name="jsDocExec"       location="${jsDocGlobalPath}/jsdoc.js"/>
	<property name="jsDocConf"       location="${config}/jsdoc.json"/>

	<!-- =============== Specific to this project =============== -->

	<!-- =============== Not Used, sytax reminder =============== -->
	<available file="${jsDocLocalExec}.cmd" property="jsDoc.windows"/>
	<available file="${jsDocExec}"          property="jsDoc.unix"/>

	<!-- Launching options: -p <port> -f <logFile> -t <logType> -l <logLevel> -v -h -->
	<property name="logFile"     value="" />
	<property name="logType"     value="" />
	<property name="logLevel"    value="-l trace" />
	<property name="verbose"     value="-v" />
	<property name="port"        value="-p 4001" />
	<property name="help"        value="" />

	<!-- ======================================================== -->
	<!--         COMMON SECTION : SAME FOR ALL PROJECTS           -->
	<!-- ======================================================== -->

	<!-- ================== TimeStamp =================== -->
	<target name="init">
		<echo>.....INIT: timestamping" </echo>
		<tstamp/>
	</target>

	<!-- ================== OS Detection ================= -->
	<target name="CheckOS" depends="init">
	    <condition property="isWindows">
	        <os family="windows" />
	    </condition>

	    <condition property="isUnix">
	        <os family="unix" />
	    </condition>
	</target>


	<!-- ================== Cleaning Environment =================== -->
    <target name="CleanLogs" depends="init" description="Cleaning log files">
			<echo>+ ============================================= </echo>
			<echo>+ CLEANING: logs, docs... "${package}"          </echo>
			<echo>+ ============================================= </echo>
	        <delete dir="${logs}" />
	        <mkdir  dir="${logs}" />
    </target>


	<!-- ======================================================== -->
	<!--   SPECIFIC SECTION : DIFFERENT FROM PROJECT TO PROJECT   -->
	<!-- ======================================================== -->

	
	<!-- ================ Install Windows Dependencies =============== -->
	<target name="winInstallDependencies" depends="CheckOS"  if="isWindows" description="Install Dependencies in Windows">
		<echo>+ ============================================= </echo>
		<echo>+ INSTALL Dependencies in Windows... "     </echo>
		<echo>+ ->Executable: Composer... ${composerExec}"        </echo>	
		<echo>+ ->Options: .............. ${composerOptions}"     </echo>	
		<echo>+ ============================================= </echo>	
		<exec executable="cmd" failonerror="true" dir="${basedir}">
		    <arg value="/c"/>
		    <arg value="${composerExec} ${composerOptions}"/>
			<arg value="-p"/>
		</exec>			
	</target>	
	
	
	<!-- ================ Install Unix Dependencies =============== -->	
	<target name="unixInstallDependencies" depends="CheckOS" if="isUnix" description="Install Dependencies in Unix">
		<echo>+ ============================================= </echo>
		<echo>+ INSTALL Dependencies in Unix... ${basedir}"   </echo>
		<echo>+ ->Executable: Composer... ${composerExec}"    </echo>	
		<echo>+ ->Options: .............. ${composerOptions}" </echo>	
		<echo>+ ============================================= </echo>	
		<exec executable="bash" failonerror="true" dir="${basedir}">
			<arg value="-p"/>			
		    <arg value="${composerExec} ${composerOptions}"/>
		</exec>			
	</target>		
	
	<!-- ================ Install Dependencies =============== -->	
	<target name="installDependencies" description="Install Dependencies, in Windows or Unix"
	    depends="unixInstallDependencies, winInstallDependencies">
	</target>	
		
	
	<!-- =================== Launching Project ================== -->
	<target name="Launch" depends="init" description="Launching Node.js video chat">

		<echo>+ ============================================= </echo>
		<echo>+ LAUNCHING Server........ ${launchScript}"     </echo>
		<echo>+ ->Executable: Node....... ${nodeExec}"        </echo>
		<echo>+ ->Options: .............. ${nodeOptions}"     </echo>
		<echo>+ ->Param: Listening Port.. "${port}"           </echo>
		<echo>+ ->Param: Logging File.... "${logFile}"        </echo>
		<echo>+ ->Param: Logging Type.... "${logType}"        </echo>
		<echo>+ ->Param: Logging Level... "${logLevel}"       </echo>
		<echo>+ ->Param: Verbose Mode.... "${verbose}"        </echo>
		<echo>+ ->Param: Help............ "${help}"           </echo>
		<echo>+ ============================================= </echo>
		<exec executable="${nodeExec}">
			<arg value="${nodeOptions}"/>
			<arg value="${launchScript}"/>
			<arg value="${help}"/>
	        <arg value="${port}"/>
			<arg value="${logFile}"/>
			<arg value="${logType}"/>
			<arg value="${logLevel}"/>
    		<arg value="${verbose}"/>
		</exec>

	</target>

	<!-- ================ Cleaning Server Documentation ============== -->
    <target name="CleanDoc" depends="init"
    	    description="Cleaning Documentation ...">
			<echo>+ =============================================     </echo>
			<echo>+ CLEANING PHPDocumentor... "${docServer}" </echo>
			<echo>+ =============================================     </echo>
    	    <delete dir="${docServer}"/>
    	    <mkdir  dir="${docServer}"/>
    </target>


	<!-- ================ Windows Documentation =============== -->
	<target name="winDoc" depends="CleanDoc, CheckOS"  if="isWindows"
	                       description="Generating Server Documentationin Windows ...">
		<echo>+ ============================================= </echo>
		<echo>+ WINDOWS - GENERATING PHPDOCUMENTOR documents...           </echo>
		<echo>+ ${jsDocLocalExec}.cmd -r ${server} --configure ${jsDocConf} --destination ${docServer} --debug</echo>
		<echo>+ ---------------------------------------------  </echo>
		<echo>+ Description:                                   </echo>
		<echo>+ ->JSDoc Exec..........  "${jsDocLocalExec}" </echo>
		<echo>+ ->JSDoc Conf..........  "${jsDocConf}"         </echo>
		<echo>+ ->InputFolder Folder..  "${server}"            </echo>
		<echo>+ ->Output Folder.......  "${docServer}"         </echo>
		<echo>+ =============================================  </echo>
		<exec executable="cmd" failonerror="true" dir="${server}">
		    <arg value="/c"/>
		    <arg value="${jsDocLocalExec}.cmd --recurse ${server} --configure ${jsDocConf} --destination ${docServer} --debug --package ${package}"/>
			<arg value="-p"/>
		</exec>
	</target>

	<!-- ================ Unix Documentation =============== -->
	<target name="unixDoc" depends="CleanDoc, CheckOS" if="isUnix"
	                       description="Generating Server Documentation in Unix ...">
		<echo>+ ============================================= </echo>
		<echo>+ UNIX - GENERATING PHPDOCUMENTOR documents...           </echo>
		<echo>+ ${jsDocExec} -r ${server} --configure ${jsDocConf} --destination ${docServer} --debug --package ${package}</echo>
		<echo>+ ---------------------------------------------  </echo>
		<echo>+ Description:                                   </echo>
		<echo>+ ->JSDoc Exec..........  "${jsDocExec}"         </echo>
		<echo>+ ->JSDoc Conf..........  "${jsDocConf}"         </echo>
		<echo>+ ->InputFolder Folder..  "${server}"            </echo>
		<echo>+ ->Output Folder.......  "${docServer}"         </echo>
		<echo>+ =============================================  </echo>
		<exec executable="bash" failonerror="true" dir="${server}">
			 <arg value="-c"/>
		    <arg value="${jsDocExec} --recurse ${server} --configure ${jsDocConf} --destination ${docServer} --debug --package ${package}"/>
		</exec>
	</target>

	<!-- ================ Documentation =============== -->
	<target name="Doc" description="Generate Documentation, in Windows or Unix"
	    depends="unixDoc, winDoc">
	</target>

</project>